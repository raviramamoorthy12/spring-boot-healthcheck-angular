<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
<parent>
	<groupId>com.webtrixs</groupId>
	<artifactId>spring-boot-healthcheck-angular</artifactId>
	<version>0.0.1-SNAPSHOT</version>

</parent>
<artifactId>healthcheck-server</artifactId>
	<packaging>jar</packaging>
	
	<description>Healthcheck Server Spring Boot </description>

	

	<properties>
		
		 <docker.image.prefix>springio</docker.image.prefix>
	</properties>

	<dependencies>

 <dependency>
            <groupId>com.webtrixs</groupId>
            <artifactId>healthcheck-ui</artifactId>
            <version>${project.parent.version}</version>
        </dependency>

		<dependency>
 <groupId>org.springframework.boot</groupId>
 <artifactId>spring-boot-starter-web</artifactId>
 <exclusions>
    <exclusion>
       <artifactId>jackson-databind</artifactId>
       <groupId>com.fasterxml.jackson.core</groupId>
    </exclusion>
 </exclusions>
</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
<!-- 		<dependency> -->
<!--    <groupId>org.springframework.boot</groupId> -->
<!--    <artifactId>spring-boot-starter-actuator</artifactId> -->
<!-- </dependency> -->


		
<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
<dependency>
    <groupId>commons-io</groupId>
    <artifactId>commons-io</artifactId>
    <version>2.6</version>
</dependency>

<dependency>
    <groupId>com.google.code.gson</groupId>
    <artifactId>gson</artifactId>
    </dependency>

<!-- https://mvnrepository.com/artifact/commons-lang/commons-lang -->
<dependency>
    <groupId>commons-lang</groupId>
    <artifactId>commons-lang</artifactId>
    <version>2.6</version>
</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		
		 <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        </dependency>
    
    <!-- https://mvnrepository.com/artifact/javax.activation/activation -->
<dependency>
    <groupId>javax.activation</groupId>
    <artifactId>activation</artifactId>
    <version>1.1.1</version>
</dependency>
	</dependencies>

	<build>
		<plugins>
		<plugin>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-maven-plugin</artifactId>
		<executions>
			<execution>
				<goals>
					<goal>repackage</goal>
				</goals>
			</execution>
		</executions>
	</plugin>
 <plugin>
  <groupId>io.fabric8</groupId>
  <artifactId>docker-maven-plugin</artifactId>
  <version>0.26.0</version>

  <configuration>
        <!--  <dockerHost>http://127.0.0.1:2375</dockerHost> -->        
        <!--  this is for Mac and Amazon Linux -->
        <!-- <dockerHost>unix:///var/run/docker.sock</dockerHost> -->

        <verbose>true</verbose>
        
       
        
		<images>
			<image>
				<name>ravibharathii/healthcheck-server</name>
				<build>
					<dockerFileDir>${project.basedir}/src/main/docker/</dockerFileDir>

                    <!--copies Jar to the maven directory (uses Assembly system)-->
					<assembly>
						<descriptorRef>artifact</descriptorRef>
					</assembly>
					<tags>
						<tag>latest</tag>
					</tags>
				</build>
			</image>
		</images>
	</configuration>
	
	<executions>
	<execution>
	<phase>package</phase>
	<goals>
	<goal>build</goal>
	<goal>push</goal>
	</goals>
	
	</execution>
	
	<execution>
	<id>mydeploy</id>
	<phase>deploy</phase>
	<goals>
	
	<goal>push</goal>
	</goals>
	
	</execution>
	
	</executions>

  <!-- Connect start/stop to pre- and
       post-integration-test phase, respectively if you want to start
       your docker containers during integration tests -->
  <!--  <executions>
    <execution>
       <id>start</id>
       <phase>pre-integration-test</phase>
       <goals> -->
         <!-- "build" should be used to create the images with the
              artifact -->
        <!--   <goal>build</goal>
         <goal>start</goal>
       </goals>
    </execution>
    <execution>
       <id>stop</id>
       <phase>post-integration-test</phase>
       <goals>
         <goal>stop</goal>
      </goals>
    </execution>
  </executions> -->
</plugin>
<plugin>
<artifactId>maven-deploy-plugin</artifactId>
<configuration>
<skip>true</skip>
</configuration>
</plugin>

		</plugins>
	</build>


</project>
